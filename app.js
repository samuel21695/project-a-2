// 변수 globalCounterNumber는 전역 변수이면서도.
// 서비스 전체에 공유되기 떄문에 민감한 정보를 다루는 측면과
// 메모르 누수(memoet leak)가 발생할 수 있는 측면(대규모로 만들어지기때문에)
// 가장 중요한 '어디서든, 의도치 않은 곳에서 변경될 수 있는' 문제가 크기 떄문에
// 현재 훈련생분들의 수준에서는 전역변수를 무분별하게 사용하면 문제가 될 수 있습니다.
// 눈에 보이지 않는 상태값을 어거지로 꺼낸 예제이므로 안티패턴입니다.

// 아래는 클로저 패턴을 사용하여 전역 변수를 사용하지 않고도
// 전역변수를 다루는 코드입니다. 
function createCounter() {
  let localCountNumber = 0; // 클로저 내부에 있는 지역 변수

  // 리턴이 함수이기 때문에, createCounter()를 호출하면
  // increaes() 함수를 리턴하고,
  // 결과적으로 지역변수 localCountNumber는 값이 남아 증가합니다.

  return function increase() {
    
  }
}